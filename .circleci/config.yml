# Compile Code, Unit Test, Scan Dependencies, Build Image, Scan Image

version: 2.1
orbs:
  anchore: anchore/anchore-engine@1.4.0
  sonarqube: onehq/sonarqube@0.3.0
jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - run: ./gradlew clean build -x test
  test:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - run: ./gradlew clean build
  quality-scan:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - run: './gradlew sonarqube \
          -Dsonar.projectKey=aaronilovici_circle-test \
          -Dsonar.organization=aaronilovici \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=b46765c6c8f0afd33d2427a6ec3daebeffea93b3'
  dependency-scan:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - run: ./gradlew dependencyCheckAnalyze
  create-image:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          command: 'docker build -t "localhost:5000/circle-test:latest" .'
      - run: mkdir -p workspace
      - run:
          command: 'docker save localhost:5000/circle-test:latest > workspace/circle-test_latest.tar'
      - persist_to_workspace:
          root: workspace
          paths:
            - circle-test_latest.tar
  image-scan:
    executor: anchore/anchore_engine
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: 'ls -al /tmp/workspace'
      - run:
          command: 'docker load -i /tmp/workspace/circle-test_latest.tar'
      - anchore/analyze_local_image:
          dockerfile_path: ./Dockerfile
          image_name: 'localhost:5000/circle-test:latest'
          policy_bundle_file_path: .circleci/.anchore/policy_bundle.json
          policy_failure: true
          timeout: '500'
      - anchore/parse_reports
      - store_artifacts:
          path: anchore-reports

#  deploy:
#    docker:
#      - image: circleci/openjdk:11-jdk
#    steps:
#      - setup_remote_docker:
#            docker_layer_caching: true
#      - checkout
#      - attach_workspace:
#          at: /tmp/workspace
#      - run:
#          command: 'docker build -t "localhost:5000/circle-test:latest" .'
#      - run:
#          command: 'docker push localhost:5000/circle-test:latest'

workflows:
  fullrun:
    jobs:
      - build
      - test:
          requires:
            - build
      - quality-scan:
          requires:
            - test
      - dependency-scan:
          requires:
            - test
      - create-image:
          requires:
            - test
      - image-scan:
          requires:
            - create-image
#      - deploy:
#          requires:
#            - image-scan